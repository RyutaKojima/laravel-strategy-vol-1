# ディレクトリ構成 ( [*]はLaravel標準のもの )

app
    + [*] Casts
    + [*] GraphQL
        + [*] Mutations     GraphQL(更新系に当たるコントローラ)
        + [*] Queries       GraphQL(参照系に当たるコントローラ)
        + [*] Validators
    + [*] Http
        + [*] Controllers   RestAPIコントローラ
        + [*] Middleware    ミドルウェア(ルーティング単位での共通処理)
        + [*] Requests      RestAPIリクエスト定義
        + [*] Resources     RestAPIレスポンス定義
    + [*] Models
        + ...               各テーブルに紐づくEloquentモデル
    + [*] Console           バッチ処理artisanコマンド
    + [*] Jobs              Event->Listeners->Jobs
    + [*] Listeners         Event->Listeners->Jobs
    + [*] Events            Event->Listeners->Jobs
    + [*] Notifications     メール/SMS/etcの通知内容・通知先定義
    + [*] Exceptions
    + UseCases
        (+ 必要であれば、認証アクター毎)
            + {ドメイン毎}
                + ***UseCase.php
                + ***Parameter.php
    + Domains
        (+ 必要であれば、認証アクター毎)
            + {ドメイン毎}
                + ValueObjects
                + Enums
    + Repositories
        (+ 必要であれば、認証アクター毎)
            + {ドメイン毎(Model毎?)}
                + Commands          更新系(Create, Update, Delete), 外部APIへのデータ保存も含む
                + Queries           取得系(Get), 外部APIからのデータ取得も含む
                    + Get系はほぼAPIと1:1のオーダーメイドになるので

########################################################################################################################
# 利用イメージ

[GraphQL.Mutations]-\     ▽----------|
[GraphQL.Queries  ]---> [UseCases    ]--------> [Models]
[Http.Controllers ]-/    |-[Parameter] \--------\--> [Domains.*.ValueObjects]
 |-[Http.Requests]                      \--------\--> [Domains.*.Enums]
 |-[Http.Resources]                      \-> [Repositories.Commands], [Queries]

- UseCases
    - UseCases は単一集約に対する処理を行います
  ◯: EloquentModel, CollectionなどLaravelの機能を利用（依存）出来ます。
      また、他のUseCases も利用可能ですが、極力避けましょう。
  ×: GraphQL, Controllers, Requests, Resources に依存しては**いけません**

- Repositories
    - Repositories は更新系の Commands と 取得のみの Queries に別れます。
      必要な場合は、Interfaceを用意しDIで差し替えを可能にします。
    - Commands
        - 基本的にはデータベースなどへの永続化を行います。
          1ファイルにCreate, Update, Deleteを含めても良いと思いますが、クラス大きくなる場合は分割を検討してください。
          外部のAPIへの更新呼び出しもCommandで行います。
    - Queries
        - 基本的にはデータベースからの取得を行います。
          取得のSQLは使いまわしが出来づらくファイルが大きくなりやすいため、基本的に1クラスに1メソッドにします。
          外部APIからのデータ取得もQueriesで行います。

- Models
    - =EloquentModelです。
      単一モデルで解決するロジックや、Eloquent用の処理を書きます。
      複数モデルを参照する必要のあるロジックはUseCasesで実装することを検討してください。

########################################################################################################################
# 実装例

app
    + [*] Casts
    + [*] GraphQL
        + [*] Mutations
        + [*] Queries
        + [*] Validators
    + [*] Http
        + [*] Controllers
            + CreateCustomerController
            + UpdateCustomerController
        + [*] Middleware
        + [*] Requests
            + CreateCustomerRequest
            + UpdateCustomerRequest
        + [*] Resources
            + CreateCustomerResource
            + UpdateCustomerResource
    + [*] Models
        + Customer
        + CustomerEmail
        + CustomerPhoneNumber
    + [*] Console
    + [*] Jobs
    + [*] Listeners
    + [*] Events
    + [*] Notifications
    + [*] Exceptions
    + UseCases
        + Customer
            + CreateCustomer
                + CreateCustomerUseCase.php
                + CreateCustomerParameter.php
                    + Parameters
                        + PhoneNumberStruct.php
            + UpdateCustomer
                + UpdateCustomerUseCase.php
                + UpdateCustomerParameter.php
            + UpdateCustomerName
                + UpdateCustomerNameUseCase.php
                + UpdateCustomerNameParameter.php
            + CustomerChangeLog  ......................変更履歴
                + CustomerChangeLogUseCase.php
                + CustomerChangeLogParameter.php
    + Domains
        + ValueObjects
            + BirthDay.php
            + EmailAddress.php
            + PhoneNumber.php
        + Enums
    + Repositories
        + Customer
            + CustomerCommand.php
            + Commands
                + UpdateCustomerCommand.php
            + Queries
                GetCustomerQuery.php
                GetCustomerPaginateQuery.php
                GetCustomerListOfFriendsQuery.php
